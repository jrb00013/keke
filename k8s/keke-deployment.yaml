apiVersion: apps/v1
kind: Deployment
metadata:
  name: keke-app
  namespace: keke
  labels:
    app: keke-app
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: keke-app
  template:
    metadata:
      labels:
        app: keke-app
        version: v1.0.0
    spec:
      containers:
      - name: keke-app
        image: keke-excel-tool:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: MONGODB_URL
          value: "mongodb://mongodb-service:27017/keke"
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: keke-secrets
              key: postgres-url
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: keke-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: keke-secrets
              key: aws-secret-access-key
        - name: AWS_REGION
          value: "us-east-1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads
        - name: logs-volume
          mountPath: /app/logs
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: keke-uploads-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: keke-logs-pvc
      - name: data-volume
        persistentVolumeClaim:
          claimName: keke-data-pvc
      imagePullSecrets:
      - name: keke-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: keke-service
  namespace: keke
  labels:
    app: keke-app
spec:
  selector:
    app: keke-app
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: keke
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: keke
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: keke
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keke-ingress
  namespace: keke
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - keke.example.com
    secretName: keke-tls
  rules:
  - host: keke.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keke-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keke-uploads-pvc
  namespace: keke
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keke-logs-pvc
  namespace: keke
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: nfs-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keke-data-pvc
  namespace: keke
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: nfs-storage

---
apiVersion: v1
kind: Secret
metadata:
  name: keke-secrets
  namespace: keke
type: Opaque
data:
  postgres-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9rZWtl
  aws-access-key-id: eW91ci1hd3MtYWNjZXNzLWtleS1pZA==
  aws-secret-access-key: eW91ci1hd3Mtc2VjcmV0LWFjY2Vzcy1rZXk=

---
apiVersion: v1
kind: Secret
metadata:
  name: keke-registry-secret
  namespace: keke
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InlvdXItdXNlcm5hbWUiLCJwYXNzd29yZCI6InlvdXItcGFzc3dvcmQiLCJhdXRoIjoiWVdSdGFXNDZNVEl6TkRVPSJ9fX0=

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: keke-hpa
  namespace: keke
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: keke-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: keke-pdb
  namespace: keke
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: keke-app
